-- Services
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer or Players:GetPlayers()[1]

-- Load Rayfield
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
   Name = "MakuScripts | Egg Randomizer",
   LoadingTitle = "MakuScripts Loader",
   LoadingSubtitle = "Grow a Garden Edition",
   ShowText = "MakuScripts",
   Theme = "Redstone",
   ToggleUIKeybind = "K",
   ConfigurationSaving = {
      Enabled = true,
      FileName = "EggRandomizerData"
   }
})

local MainTab = Window:CreateTab("Main Menu", 4483362458)

-- Egg chance table
local eggChances = {
   ["Anti Bee Egg"] = {
      {name="Wasp",chance=55},{name="Tarantula Hawk",chance=30},{name="Moth",chance=13.75},{name="Butterfly",chance=1},{name="Disco Bee (Divine)",chance=0.5}
   },
   ["Bee Egg"] = {
      {name="Bee",chance=65},{name="Honey Bee",chance=25},{name="Bear Bee",chance=5},{name="Petal Bee",chance=4},{name="Queen Bee",chance=1}
   },
   ["Bug Egg"] = {
      {name="Snail",chance=40},{name="Giant Ant",chance=30},{name="Caterpillar",chance=25},{name="Praying Mantis",chance=4},{name="Dragonfly (Divine)",chance=1}
   },
   ["Common Egg"] = {
      {name="Dog",chance=33},{name="Bunny",chance=33},{name="Golden Lab",chance=34}
   },
   ["Common Summer Egg"] = {
      {name="Starfish",chance=50},{name="Seagull",chance=25},{name="Crab",chance=25}
   },
   ["Dinosaur Egg"] = {
      {name="Raptor",chance=35},{name="Triceratops",chance=32.5},{name="Stegosaurus",chance=28},{name="Pterodactyl",chance=3},{name="Brontosaurus",chance=1},{name="T-Rex (Divine)",chance=0.5}
   },
   ["Legendary Egg"] = {
      {name="Cow",chance=43},{name="Silver Monkey",chance=43},{name="Sea Otter",chance=11},{name="Turtle",chance=2},{name="Polar Bear",chance=2}
   },
   ["Mythical Egg"] = {
      {name="Grey Mouse",chance=36},{name="Brown Mouse",chance=27},{name="Squirrel",chance=27},{name="Red Giant Ant",chance=9},{name="Red Fox",chance=2}
   },
   ["Night Egg"] = {
      {name="Hedgehog",chance=49},{name="Mole",chance=23.5},{name="Frog",chance=17.63},{name="Echo Frog",chance=8.23},{name="Night Owl",chance=3.53},{name="Raccoon",chance=0.2}
   },
   ["Oasis Egg"] = {
      {name="Meerkat",chance=45},{name="Sand Snake",chance=34.5},{name="Axolotl",chance=15},{name="Hyacinth Macaw",chance=5},{name="Fennec Fox",chance=0.5}
   },
   ["Paradise Egg"] = {
      {name="Ostrich",chance=40},{name="Peacock",chance=30},{name="Capybara",chance=21},{name="Scarlet Macaw",chance=8},{name="Mimic Octopus",chance=1}
   },
   ["Primal Egg"] = {
      {name="Parasaurolophus",chance=35},{name="Iguanodon",chance=32.5},{name="Pachycephalosaurus",chance=28},{name="Dilophosaurus",chance=3},{name="Ankylosaurus",chance=1},{name="Spinosaurus (Divine)",chance=0.5}
   },
   ["Rare Egg"] = {
      {name="Orange Tabby",chance=33},{name="Spotted Deer",chance=25},{name="Pig",chance=17},{name="Rooster",chance=17},{name="Monkey",chance=8}
   },
   ["Rare Summer Egg"] = {
      {name="Flamingo",chance=30},{name="Toucan",chance=25},{name="Sea Turtle",chance=20},{name="Orangutan",chance=15},{name="Seal",chance=10}
   },
   ["Uncommon Egg"] = {
      {name="Black Bunny",chance=25},{name="Chicken",chance=25},{name="Cat",chance=25},{name="Deer",chance=25}
   },
   ["Zen Egg"] = {
      {name="Shiba Inu",chance=49},{name="Nihonzaru",chance=23.5},{name="Tanuki",chance=17.63},{name="Tanchozuru",chance=8.23},{name="Kappa",chance=3.53},{name="Kitsune",chance=0.2}
   }
}

-- Pet rarity color
local function getPetRarityColor(petName)
   if petName:find("%(Divine%)") then
      return Color3.fromRGB(255, 215, 0) -- Gold
   end
   return Color3.fromRGB(255, 85, 85)
end

-- Random pet selector
local function getRandomPet(eggName)
   local pets = eggChances[eggName]
   if not pets then return "Unknown" end
   local totalChance, roll, sum = 0, 0, 0
   for _, pet in ipairs(pets) do totalChance += pet.chance end
   roll = math.random() * totalChance
   for _, pet in ipairs(pets) do
      sum += pet.chance
      if roll <= sum then return pet.name end
   end
   return pets[#pets].name
end

-- ESP
local espBillboards, espEnabled = {}, false
local MAX_DISTANCE = 60

local function clearESP()
   for _, bb in pairs(espBillboards) do
      if bb and bb.Parent then bb:Destroy() end
   end
   espBillboards = {}
end

local function findEggModels(root)
   local eggs = {}
   for _, child in pairs(root:GetChildren()) do
      if eggChances[child.Name] then table.insert(eggs, child) end
      for _, sub in pairs(findEggModels(child)) do table.insert(eggs, sub) end
   end
   return eggs
end

local function createESP(eggModel)
   if espBillboards[eggModel] then return end
   local adornee = eggModel.PrimaryPart or eggModel:FindFirstChildWhichIsA("BasePart")
   if not adornee or not eggChances[eggModel.Name] then return end
   local petName = getRandomPet(eggModel.Name)

   local bb = Instance.new("BillboardGui", CoreGui)
   bb.Name = "EggESP"
   bb.Adornee = adornee
   bb.Size = UDim2.new(0, 140, 0, 50)
   bb.AlwaysOnTop = true
   bb.StudsOffset = Vector3.new(0, 3, 0)

   local eggLabel = Instance.new("TextLabel", bb)
   eggLabel.Size = UDim2.new(1, 0, 0.5, 0)
   eggLabel.BackgroundTransparency = 1
   eggLabel.Text = eggModel.Name
   eggLabel.TextColor3 = Color3.new(1, 1, 1)
   eggLabel.TextStrokeTransparency = 0.3
   eggLabel.Font = Enum.Font.GothamBold
   eggLabel.TextScaled = true

   local petLabel = Instance.new("TextLabel", bb)
   petLabel.Size = UDim2.new(1, 0, 0.5, 0)
   petLabel.Position = UDim2.new(0, 0, 0.5, 0)
   petLabel.BackgroundTransparency = 1
   petLabel.Text = petName
   petLabel.TextColor3 = getPetRarityColor(petName)
   petLabel.TextStrokeTransparency = 0.3
   petLabel.Font = Enum.Font.GothamBold
   petLabel.TextScaled = true

   espBillboards[eggModel] = bb
end

local function refreshESP()
   clearESP()
   if not espEnabled then return end
   local eggs = findEggModels(Workspace)
   local char = LocalPlayer.Character
   if not char or not char:FindFirstChild("HumanoidRootPart") then return end
   local hrp = char.HumanoidRootPart

   for _, egg in ipairs(eggs) do
      local adornee = egg.PrimaryPart or egg:FindFirstChildWhichIsA("BasePart")
      if adornee then
         local dist = (hrp.Position - adornee.Position).Magnitude
         if dist <= MAX_DISTANCE then createESP(egg) end
      end
   end
end

MainTab:CreateToggle({
   Name = "Egg ESP",
   CurrentValue = false,
   Callback = function(state)
      espEnabled = state
      if state then refreshESP() else clearESP() end
   end
})

MainTab:CreateButton({
   Name = "Randomize Egg Pet Names",
   Callback = function()
      for eggModel, billboard in pairs(espBillboards) do
         for _, child in pairs(billboard:GetChildren()) do
            if child:IsA("TextLabel") and child.Position.Y.Scale > 0 then
               local newPet = getRandomPet(eggModel.Name)
               child.Text = newPet
               child.TextColor3 = getPetRarityColor(newPet)
            end
         end
      end
   end
})

MainTab:CreateButton({
   Name = "Auto Age Held Pet",
   Callback = function()
      local tool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
      if not tool then return end
      local itemName = tool.Name
      local currentAge = tonumber(itemName:match("%[Age%s*(%d+)%]"))
      if not currentAge then return end
      local prefix = itemName:match("^(.-)%s*%[Age%s*%d+%]") or itemName
      for i = currentAge + 1, 50 do
         tool.Name = prefix .. "[Age " .. i .. "]"
         task.wait(0.12)
      end
   end
})

-- Mutation tab
local MutationTab = Window:CreateTab("Mutation Hacks", 4483362458)

local mutations = {
   "Shiny", "Inverted", "Frozen", "Windy", "Golden", "Mega", "Tiny",
   "Tranquil", "IronSkin", "Radiant", "Rainbow", "Shocked", "Ascended"
}

local currentMutation = mutations[math.random(#mutations)]
local espVisible = false

local function initMutationESP()
   local machine
   for _, obj in pairs(Workspace:GetDescendants()) do
      if obj:IsA("Model") and obj.Name:lower():find("mutation") then machine = obj break end
   end
   if not machine then return end

   local part = machine:FindFirstChildWhichIsA("BasePart")
   if not part then return end

   if part:FindFirstChild("MutationESP") then part.MutationESP:Destroy() end

   local espGui = Instance.new("BillboardGui", part)
   espGui.Name = "MutationESP"
   espGui.Adornee = part
   espGui.Size = UDim2.new(0, 200, 0, 40)
   espGui.StudsOffset = Vector3.new(0, 3, 0)
   espGui.AlwaysOnTop = true
   espGui.Enabled = false

   local label = Instance.new("TextLabel", espGui)
   label.Size = UDim2.new(1, 0, 1, 0)
   label.BackgroundTransparency = 1
   label.Font = Enum.Font.GothamBold
   label.TextSize = 24
   label.TextStrokeTransparency = 0.3
   label.TextStrokeColor3 = Color3.new(0, 0, 0)
   label.Text = currentMutation

   RunService.RenderStepped:Connect(function()
      if espGui.Enabled then
         local hue = tick() % 5 / 5
         label.TextColor3 = Color3.fromHSV(hue, 1, 1)
      end
   end)

   MutationTab:CreateButton({
      Name = "Mutation Reroll",
      Callback = function()
         label.Text = "‚è≥ Rerolling..."
         for _ = 1, 20 do
            label.Text = mutations[math.random(#mutations)]
            task.wait(0.1)
         end
         currentMutation = mutations[math.random(#mutations)]
         label.Text = currentMutation
      end
   })

   MutationTab:CreateToggle({
      Name = "Toggle Mutation ESP",
      CurrentValue = false,
      Callback = function(state)
         espVisible = state
         espGui.Enabled = state
      end
   })
end

initMutationESP()

-- Leak script button
MainTab:CreateButton({
   Name = "Run Leak Script",
   Callback = function()
      local Spawner = loadstring(game:HttpGet("https://codeberg.org/GrowAFilipino/GrowAGarden/raw/branch/main/Spawner.lua"))()
      Spawner.Load()
   end
})local function refreshESP()
    clearESP()
    for _, egg in ipairs(Workspace:GetDescendants()) do
        if eggChances[egg.Name] then
            createESP(egg)
        end
    end
end

-- GUI creation
local gui = Instance.new("ScreenGui", CoreGui)
gui.Name = "EggESP_GUI"
gui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", gui)
mainFrame.Size = UDim2.new(0, 180, 0, 40)
mainFrame.Position = UDim2.new(0.78, 0, 0.1, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(45, 0, 0)
mainFrame.BorderColor3 = Color3.fromRGB(255, 0, 0)
mainFrame.BorderSizePixel = 2
mainFrame.Active = true
mainFrame.Draggable = true

local toggleBtn = Instance.new("TextButton", mainFrame)
toggleBtn.Size = UDim2.new(1, 0, 1, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 0, 0)
toggleBtn.TextColor3 = Color3.new(1, 0, 0)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 16
toggleBtn.Text = "MakuScripts Menu ‚è¨"
toggleBtn.AutoButtonColor = false

local buttonHolder = Instance.new("Frame", mainFrame)
buttonHolder.Position = UDim2.new(0, 0, 1, 0)
buttonHolder.Size = UDim2.new(1, 0, 0, 220)
buttonHolder.BackgroundTransparency = 1
buttonHolder.Visible = false

-- ESP button
local espBtn = Instance.new("TextButton", buttonHolder)
espBtn.Size = UDim2.new(1, 0, 0, 40)
espBtn.BackgroundColor3 = Color3.fromRGB(90, 0, 0)
espBtn.TextColor3 = Color3.new(1, 0.3, 0.3)
espBtn.Font = Enum.Font.GothamBold
espBtn.TextSize = 15
espBtn.Text = "Egg ESP"

-- Randomizer button
local randBtn = Instance.new("TextButton", buttonHolder)
randBtn.Size = UDim2.new(1, 0, 0, 40)
randBtn.Position = UDim2.new(0, 0, 0, 45)
randBtn.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
randBtn.TextColor3 = Color3.new(1, 0.3, 0.3)
randBtn.Font = Enum.Font.GothamBold
randBtn.TextSize = 15
randBtn.Text = "Randomize Egg"

-- Auto Age button
local ageBtn = Instance.new("TextButton", buttonHolder)
ageBtn.Size = UDim2.new(1, 0, 0, 40)
ageBtn.Position = UDim2.new(0, 0, 0, 90)
ageBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 0)
ageBtn.TextColor3 = Color3.new(1, 1, 1)
ageBtn.Font = Enum.Font.GothamBold
ageBtn.TextSize = 15
ageBtn.Text = "Auto Age (hold pet)"

-- Mutation buttons
local mutations = {
    "Shiny", "Inverted", "Frozen", "Windy", "Golden", "Mega", "Tiny",
    "Tranquil", "IronSkin", "Radiant", "Rainbow", "Shocked", "Ascended"
}
local currentMutation = mutations[math.random(#mutations)]
local espVisible = true

local mutateBtn = Instance.new("TextButton", buttonHolder)
mutateBtn.Size = UDim2.new(1, 0, 0, 40)
mutateBtn.Position = UDim2.new(0, 0, 0, 135)
mutateBtn.BackgroundColor3 = Color3.fromRGB(0, 0, 120)
mutateBtn.TextColor3 = Color3.new(0.5, 0.8, 1)
mutateBtn.Font = Enum.Font.GothamBold
mutateBtn.TextSize = 15
mutateBtn.Text = "Randomize Mutation"

local toggleEspBtn = Instance.new("TextButton", buttonHolder)
toggleEspBtn.Size = UDim2.new(1, 0, 0, 40)
toggleEspBtn.Position = UDim2.new(0, 0, 0, 180)
toggleEspBtn.BackgroundColor3 = Color3.fromRGB(120, 0, 120)
toggleEspBtn.TextColor3 = Color3.new(1, 0.5, 1)
toggleEspBtn.Font = Enum.Font.GothamBold
toggleEspBtn.TextSize = 15
toggleEspBtn.Text = "Toggle Mutation ESP"

-- Find mutation machine
local machine
for _, obj in pairs(Workspace:GetDescendants()) do
    if obj:IsA("Model") and obj.Name:lower():find("mutation") then
        machine = obj
        break
    end
end

-- Mutation ESP
local espGui, espLabel
if machine and machine:FindFirstChildWhichIsA("BasePart") then
    local basePart = machine:FindFirstChildWhichIsA("BasePart")
    
    espGui = Instance.new("BillboardGui")
    espGui.Name = "MutationESP"
    espGui.Adornee = basePart
    espGui.Size = UDim2.new(0, 200, 0, 40)
    espGui.StudsOffset = Vector3.new(0, 3, 0)
    espGui.AlwaysOnTop = true
    espGui.Parent = basePart

    espLabel = Instance.new("TextLabel", espGui)
    espLabel.Size = UDim2.new(1, 0, 1, 0)
    espLabel.BackgroundTransparency = 1
    espLabel.Font = Enum.Font.GothamBold
    espLabel.TextSize = 24
    espLabel.TextStrokeTransparency = 0.3
    espLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    espLabel.Text = currentMutation

    -- Rainbow color effect
    local hue = 0
    RunService.RenderStepped:Connect(function()
        if espVisible then
            hue = (hue + 0.01) % 1
            espLabel.TextColor3 = Color3.fromHSV(hue, 1, 1)
        end
    end)
end

-- Mutation functions
local function animateMutationReroll()
    if not espLabel then return end
    espLabel.Text = "‚è≥ Rerolling..."
    local duration = 2
    local interval = 0.1
    for i = 1, math.floor(duration / interval) do
        espLabel.Text = mutations[math.random(#mutations)]
        task.wait(interval)
    end
    currentMutation = mutations[math.random(#mutations)]
    espLabel.Text = currentMutation
end

local function toggleMutationESP()
    if not espGui then return end
    espVisible = not espVisible
    espGui.Enabled = espVisible
    toggleEspBtn.Text = espVisible and "Mutation ESP: ON" or "Mutation ESP: OFF"
end

-- Button connections
mutateBtn.MouseButton1Click:Connect(animateMutationReroll)
toggleEspBtn.MouseButton1Click:Connect(toggleMutationESP)

-- Original button logic
local espEnabled = false

espBtn.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espBtn.Text = espEnabled and "ESP: ON" or "ESP: OFF"
    if espEnabled then
        refreshESP()
    else
        clearESP()
    end
end)

randBtn.MouseButton1Click:Connect(refreshESP)

toggleBtn.MouseButton1Click:Connect(function()
    buttonHolder.Visible = not buttonHolder.Visible
    toggleBtn.Text = buttonHolder.Visible and "MakuScripts Menu ‚è´" or "MakuScripts Menu ‚è¨"
end)

-- Auto Age logic
local isCooldown = false

ageBtn.MouseButton1Click:Connect(function()
    if isCooldown then return end

    local tool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
    if not tool then
        warn("No pet equipped.")
        return
    end

    local itemName = tool.Name
    local currentAge = tonumber(itemName:match("Age%s*(%d+)"))
    if not currentAge then
        warn("Age not found in item name.")
        return
    end

    local prefix = itemName:match("^(.-)%s*%[Age%s*%d+%]") or itemName

    isCooldown = true
    ageBtn.Text = "Spoofing..."

    for i = currentAge + 1, 50 do
        tool.Name = prefix .. "[Age " .. i .. "]"
        task.wait(0.12)
    end

    ageBtn.Text = "Auto Age (hold pet)"
    isCooldown = false
end)

-- Auto-refresh eggs
Workspace.DescendantAdded:Connect(function(descendant)
    if espEnabled and eggChances[descendant.Name] then
        createESP(descendant)
    end
end)

-- Run ESP at start if needed
if espEnabled then
    refreshESP()
end
